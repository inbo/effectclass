% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_classification.R
\name{add_classification}
\alias{add_classification}
\title{Add a point symbol with classification to a \code{plotly} object}
\usage{
add_classification(
  p,
  x = NULL,
  y = NULL,
  ...,
  data = NULL,
  inherit = TRUE,
  sd,
  lcl = NULL,
  ucl = NULL,
  threshold,
  reference = 0,
  prob = 0.95,
  size = 20,
  link = c("identity", "log", "logit"),
  detailed = TRUE,
  signed = TRUE
)
}
\arguments{
\item{p}{a plotly object}

\item{x}{the x variable.}

\item{y}{the y variable.}

\item{...}{Arguments (i.e., attributes) passed along to the trace \code{type}.
See \code{\link[plotly:schema]{schema()}} for a list of acceptable attributes for a given trace \code{type}
(by going to \code{traces} -> \code{type} -> \code{attributes}). Note that attributes
provided at this level may override other arguments
(e.g. \code{plot_ly(x = 1:10, y = 1:10, color = I("red"), marker = list(color = "blue"))}).}

\item{data}{A data frame (optional) or \link[crosstalk:SharedData]{crosstalk::SharedData} object.}

\item{inherit}{inherit attributes from \code{\link[plotly:plot_ly]{plot_ly()}}?}

\item{sd}{the variable of the standard error on the link scale.}

\item{lcl}{A vector of lower confidence limits.}

\item{ucl}{A vector of upper confidence limits.}

\item{threshold}{A vector of either 1 or 2 thresholds.
A single threshold will be transformed into
\code{reference + c(-abs(threshold), abs(threshold))}.}

\item{reference}{The null hypothesis.
Defaults to 0.}

\item{prob}{The coverage of the confidence interval when calculated from the
mean \code{y} and standard error \code{sd}.
Note that the function assumes a normal distribution at the \code{link} scale.}

\item{size}{Size of the point symbol.}

\item{link}{the link between the natural scale and the link scale.
Defaults to \code{"identity"}.}

\item{detailed}{\code{TRUE} indicates a detailed \code{\link[=classification]{classification()}};
\code{FALSE} a \code{\link[=coarse_classification]{coarse_classification()}}.
Defaults to \code{TRUE}.}

\item{signed}{\code{TRUE} indicates a signed classification;
\code{FALSE} a classification with \code{\link[=remove_sign]{remove_sign()}}.
Defaults to \code{TRUE}.}
}
\description{
See \code{classification()} for an explication on how the classification is done.
}
\examples{
# All possible classes
z <- data.frame(
  estimate = c(-0.7, 0, 0.7, 2, 1, 0.5, 0, -0.5, -1, -2),
  sd = c(rep(0.8, 3), rep(0.3, 7))
)
z$lcl <- qnorm(0.05, z$estimate, z$sd)
z$ucl <- qnorm(0.95, z$estimate, z$sd)
classification(z$lcl, z$ucl, threshold = 1) -> z$effect
c(
  "?" = "unknown\neffect", "?+" = "potential\npositive\neffect",
  "?-" = "potential\nnegative\neffect", "~" = "no effect",
  "+" = "positive\neffect", "-" = "negative\neffect",
  "+~" = "moderate\npositive\neffect", "-~" = "moderate\nnegative\neffect",
  "++" = "strong\npositive\neffect", "--" = "strong\nnegative\neffect"
)[as.character(z$effect)] -> z$x
z$x <- factor(z$x, z$x)

# Simulated trend
set.seed(20190521)
base_year <- 2000
n_year <- 20
trend <- data.frame(
  dt = seq_len(n_year),
  change = rnorm(n_year, sd = 0.2),
  sd = rnorm(n_year, mean = 0.1, sd = 0.01)
)
trend$index <- cumsum(trend$change)
trend$lcl <- qnorm(0.025, trend$index, trend$sd)
trend$ucl <- qnorm(0.975, trend$index, trend$sd)
trend$year <- base_year + trend$dt
th <- 0.25
ref <- 0
library(plotly)
plot_ly(z, x = ~x, y = ~estimate) |>
  add_fan(sd = ~sd) |>
  add_classification(lcl = ~lcl, ucl = ~ucl, threshold = 1) |>
  layout(
    shapes = reference_shape(threshold = 1),
    annotations = reference_text(threshold = 1)
  )
plot_ly(z, x = ~x, y = ~estimate) |>
  add_fan(sd = ~sd, step = 0.1) |>
  add_classification(
    lcl = ~lcl, ucl = ~ucl, threshold = 1, detailed = FALSE
   ) |>
  layout(
    shapes = reference_shape(threshold = 1, line = TRUE),
    annotations = reference_text(threshold = 1)
   )
plot_ly(z, x = ~x, y = ~estimate) |>
  add_fan(sd = ~sd, step = 0.2) |>
  add_classification(
    lcl = ~lcl, ucl = ~ucl, threshold = 1, signed = FALSE
  ) |>
  layout(shapes = reference_shape(threshold = 1))
plot_ly(z, x = ~x, y = ~estimate) |>
  add_fan(sd = ~sd, step = 0.3) |>
  add_classification(
    lcl = ~lcl, ucl = ~ucl, threshold = 1, detailed = FALSE, signed = FALSE
  ) |>
  layout(shapes = reference_shape(threshold = 1, line = TRUE))

# trend
plot_ly(data = trend, x = ~year, y = ~index) |>
  add_fan(sd = ~sd) |>
  add_classification(sd = ~sd, threshold = th) |>
  layout(
    shapes = reference_shape(threshold = th, reference = ref),
    annotations = reference_text(threshold = th, reference = ref)
  )
}
\seealso{
Other plotly add-ons: 
\code{\link{add_fan}()},
\code{\link{reference_shape}()},
\code{\link{reference_text}()}
}
\concept{plotly add-ons}

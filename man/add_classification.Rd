% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_classification.R
\name{add_classification}
\alias{add_classification}
\title{Add a point symbol with classification to a \code{plotly} object}
\usage{
add_classification(
  p,
  x = NULL,
  y = NULL,
  ...,
  data = NULL,
  inherit = TRUE,
  sd,
  lcl,
  ucl,
  threshold,
  reference = 0,
  prob = 0.95,
  link = c("identity", "log", "logit"),
  size = 20,
  detailed = TRUE,
  signed = TRUE
)
}
\arguments{
\item{p}{a plotly object}

\item{x}{the x variable.}

\item{y}{the y variable.}

\item{...}{Arguments (i.e., attributes) passed along to the trace \code{type}.
See \code{\link[plotly:schema]{schema()}} for a list of acceptable attributes for a given trace \code{type}
(by going to \code{traces} -> \code{type} -> \code{attributes}). Note that attributes
provided at this level may override other arguments
(e.g. \code{plot_ly(x = 1:10, y = 1:10, color = I("red"), marker = list(color = "blue"))}).}

\item{data}{A data frame (optional) or \link[crosstalk:SharedData]{crosstalk::SharedData} object.}

\item{inherit}{inherit attributes from \code{\link[plotly:plot_ly]{plot_ly()}}?}

\item{sd}{the variable of the standard error on the link scale.}

\item{lcl}{A vector of lower confidence limits.}

\item{ucl}{A vector of upper confidence limits.}

\item{threshold}{A vector of either 1 or 2 thresholds.
A single threshold will be transformed into
\code{reference + c(-abs(threshold), abs(threshold))}.}

\item{reference}{The null hypothesis.
Defaults to 0.}

\item{prob}{The coverage of the confidence interval when calculated from the
mean \code{y} and standard error \code{sd}.
Note that the function assumes a normal distribution at the \code{link} scale.}

\item{link}{the link between the natural scale and the link scale.
Defaults to \code{"identity"}.}

\item{size}{Size of the point symbol.}

\item{detailed}{\code{TRUE} indicates a detailed \code{\link[=classification]{classification()}};
\code{FALSE} a \code{\link[=coarse_classification]{coarse_classification()}}.
Defaults to \code{TRUE}.}

\item{signed}{\code{TRUE} indicates a signed classification;
\code{FALSE} a classification with \code{\link[=remove_sign]{remove_sign()}}.
Defaults to \code{TRUE}.}
}
\description{
See \code{classification()} for an explication on how the classification is done.
}
\examples{
z <- data.frame(
  effect = factor(
    1:10,
    labels = c("unknown\neffect", "potential\npositive\neffect",
             "potential\nnegative\neffect", "no effect", "positive\neffect",
             "negative\neffect", "moderate\npositive\neffect",
             "moderate\nnegative\neffect", "strong\npositive\neffect",
             "strong\nnegative\neffect")
  ),
  estimate = c( 0,  0,    0,   0,   1,   -1,   0.5, -0.5, 1.5, -1.5),
  lcl =      c(-2, -0.9, -2,  -0.9, 0.1, -2,   0.1, -0.9, 1.1, -2),
  ucl =      c( 2,  2,    0.9, 0.9, 2,   -0.1, 0.9, -0.1, 2,   -1.1)
)
library(plotly)
z$error_up <- z$ucl - z$estimate
z$error_down <- z$estimate - z$lcl
plot_ly(
  z, y = ~effect, x = ~estimate, type = "scatter", mode = "none",
  error_x = list(type = "data", array = ~error_up, arrayminus = ~error_down)
) |>
  add_classification(lcl = ~lcl, ucl = ~ucl, threshold = 1)
plot_ly(
  z, y = ~effect, x = ~estimate, type = "scatter", mode = "none",
  error_x = list(type = "data", array = ~error_up, arrayminus = ~error_down)
) |>
  add_classification(lcl = ~lcl, ucl = ~ucl, threshold = 1, detailed = FALSE)
plot_ly(
  z, y = ~effect, x = ~estimate, type = "scatter", mode = "none",
  error_x = list(type = "data", array = ~error_up, arrayminus = ~error_down)
) |>
  add_classification(lcl = ~lcl, ucl = ~ucl, threshold = 1, signed = FALSE)
plot_ly(
  z, y = ~effect, x = ~estimate, type = "scatter", mode = "none",
  error_x = list(type = "data", array = ~error_up, arrayminus = ~error_down)
) |>
  add_classification(
    lcl = ~lcl, ucl = ~ucl, threshold = 1, detailed = FALSE, signed = FALSE
  )
}
\seealso{
Other plotly add-ons: 
\code{\link{add_fan}()}
}
\concept{plotly add-ons}
